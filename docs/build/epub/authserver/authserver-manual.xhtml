<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="generator" content="Docutils 0.17.1: http://docutils.sourceforge.net/" />

    <title>Auth Server User Manual</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../_static/epub.css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="auth-server-user-manual">
<span id="authserver-manual"></span><h1>Auth Server User Manual</h1>
<p>UNICORE Team &lt;<a class="reference external" href="mailto:unicore-support&#37;&#52;&#48;lists&#46;sourceforge&#46;net">unicore-support<span>&#64;</span>lists<span>&#46;</span>sourceforge<span>&#46;</span>net</a>&gt;</p>
<p>The UFTP authentication service (“Auth server”) is RESTful
service for authenticating users and initiating UFTP transfers. It
is indended to be used with a standalone UFTP client and provides
access to one or more UFTPD servers.</p>
<p>Besides data transfer via UFTP and data management features like ‘ls’,
the Auth server also provides REST services for data sharing and
accessing shared data sets.</p>
<p>The Auth server is based on the UNICORE Services Environment, and all
usual UNICORE features and security configuration options are
available as well. For example, the Auth server can be deployed behind
a UNICORE Gateway, or it can be configured to use Unity for
authenticating users.</p>
<p>This manual focuses on the configuration items specific to the Auth
server. If you need more in-depth information on general configuration
issues, please refer to the UNICORE/X manual, available via unicore.eu</p>
<section id="installation">
<h2>Installation</h2>
<section id="prerequisites">
<h3>Prerequisites</h3>
<p>The Auth server should be run as a non-root user (e.g. ‘unicore’).</p>
<p>It requires</p>
<blockquote>
<div><ul class="simple">
<li><p>Java 1.8</p></li>
<li><p>an installed UFTPD server (2.6.0 or later)</p></li>
</ul>
</div></blockquote>
<p>The Auth server needs an X.509 certificate and truststore
for communicating with UFTPD.</p>
<p>Users must be able to access the Auth server’s https port. It is
possible to deploy the Auth server behind a UNICORE Gateway.</p>
<p>The UFTP Auth service comes with all required scripts and config files
to be run standalone. To install, unzip the downloaded package into a
directory of your choice.</p>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>You can run the service in an existing UNICORE/X server (8.0.0 or later). Please see <a class="reference internal" href="#running-the-auth-server-behind-a-unicore-gateway">Running the Auth server behind a UNICORE Gateway</a> below for details.</p>
</div>
</section>
<section id="basic-server-configuration-memory-etc">
<h3>Basic server configuration (memory etc)</h3>
<p>The <cite>startup.properties</cite> configuration file contains basic settings
such as the Java command, JVM memory etc. Please review it.</p>
<p>The Auth server host and port are configured in the <cite>container.properties</cite>
configuration file:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">container</span><span class="o">.</span><span class="n">host</span><span class="o">=</span><span class="n">uftp</span><span class="o">.</span><span class="n">yoursite</span><span class="o">.</span><span class="n">com</span>
<span class="n">container</span><span class="o">.</span><span class="n">port</span><span class="o">=</span><span class="mi">9000</span>

<span class="c1"># if running behind a UNICORE Gateway or a NAT router,</span>
<span class="c1"># set the baseurl</span>
<span class="n">container</span><span class="o">.</span><span class="n">sitename</span><span class="o">=</span><span class="n">AUTH</span>
<span class="n">container</span><span class="o">.</span><span class="n">baseurl</span><span class="o">=</span><span class="n">gateway</span><span class="o">.</span><span class="n">yoursite</span><span class="o">.</span><span class="n">com</span><span class="p">:</span><span class="mi">2222</span><span class="o">/</span><span class="n">AUTH</span><span class="o">/</span><span class="n">services</span>
</pre></div>
</div>
<p>Also in the <cite>container.properties</cite> configuration file, the server’s X.509
private key and the truststore settings need to be configured.</p>
</section>
<section id="starting-and-stopping-the-service">
<h3>Starting and stopping the service</h3>
<p>Use the shell scripts in the <cite>bin</cite> folder to start or stop the
service.</p>
</section>
</section>
<section id="configuration">
<h2>Configuration</h2>
<p>The following items need to be configured in the Auth
server’s <cite>container.properties</cite> file:</p>
<blockquote>
<div><ul class="simple">
<li><p>UFTPD server(s) to be accessed</p></li>
<li><p>User authentication: configure the Auth server to authenticate
users using username/password, ssh key or via Unity</p></li>
<li><p>Attribute sources (XUUDB, map file, …) for assigning
local attributes like UNIX user name to authenticated
users.</p></li>
</ul>
</div></blockquote>
<section id="features">
<h3>Features</h3>
<p>This service provides two features</p>
<blockquote>
<div><ul class="simple">
<li><p>AuthServer</p></li>
<li><p>DataSharing</p></li>
</ul>
</div></blockquote>
<p>both are enabled by default. To disable data sharing, set</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">container</span><span class="o">.</span><span class="n">feature</span><span class="o">.</span><span class="n">DataSharing</span><span class="o">.</span><span class="n">enable</span><span class="o">=</span><span class="n">false</span>
</pre></div>
</div>
<p>There are no further configuration options for these features.</p>
</section>
<section id="uftpd-server-s-configuration">
<h3>UFTPD server(s) configuration</h3>
<p>For each UFTPD server that should be accessed, you’ll need
to configure the relevant properties in the Auth service’s config file</p>
<p>The <cite>authservice.servers</cite> property is a list of server names. These
should be meaningful, since users will need to use them, too.  The
other properties are used to configure the UFTPD command address and
the UFTPD listen address. Please refer to the UFTPD configuration and
manual for details.</p>
<blockquote>
<div><ul class="simple">
<li><p><cite>host</cite> the IP address of the UFTPD ‘listen’ socket</p></li>
<li><p><cite>port</cite> the port of the UFTPD ‘listen’ socket</p></li>
<li><p><cite>commandHost</cite> the IP address of the UFTPD ‘command’ socket</p></li>
<li><p><cite>commandPort</cite>: the port of the UFTPD ‘command’ socket</p></li>
<li><p><cite>ssl</cite>: whether SSL is used to connect to the command socket. This MUST be set to its default of ‘true’ in a production environment!</p></li>
<li><p><cite>description</cite>: human-readable description of the UFTPD server</p></li>
</ul>
</div></blockquote>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>The listen socket address will be communicated to clients, who will
attempt to connect to that address. Therefore, this has         to be a public
interface. For example, if you are running UFTPD behind a       NAT router,
you have to use the IP configured as the ADVERTISE_HOST         in the UFTPD configuration.</p>
</div>
<p>For example, we want to configure two UFTPD servers named “CLUSTER”
and “TEST”:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="c1"># configured UFTPD server(s)</span>
<span class="n">authservice</span><span class="o">.</span><span class="n">servers</span><span class="o">=</span><span class="n">CLUSTER</span> <span class="n">TEST</span>

<span class="c1"># configuration for &#39;CLUSTER&#39; server</span>
<span class="n">authservice</span><span class="o">.</span><span class="n">server</span><span class="o">.</span><span class="n">CLUSTER</span><span class="o">.</span><span class="n">host</span><span class="o">=</span><span class="n">cluster</span><span class="o">.</span><span class="n">your</span><span class="o">.</span><span class="n">org</span>
<span class="n">authservice</span><span class="o">.</span><span class="n">server</span><span class="o">.</span><span class="n">CLUSTER</span><span class="o">.</span><span class="n">port</span><span class="o">=</span><span class="mi">64433</span>
<span class="n">authservice</span><span class="o">.</span><span class="n">server</span><span class="o">.</span><span class="n">CLUSTER</span><span class="o">.</span><span class="n">commandHost</span><span class="o">=</span><span class="n">cluster</span><span class="o">-</span> <span class="n">internal</span><span class="o">.</span><span class="n">your</span><span class="o">.</span><span class="n">org</span>
<span class="n">authservice</span><span class="o">.</span><span class="n">server</span><span class="o">.</span><span class="n">CLUSTER</span><span class="o">.</span><span class="n">commandPort</span><span class="o">=</span><span class="mi">64434</span>
<span class="n">authservice</span><span class="o">.</span><span class="n">server</span><span class="o">.</span><span class="n">CLUSTER</span><span class="o">.</span><span class="n">ssl</span><span class="o">=</span><span class="n">true</span>
<span class="n">authservice</span><span class="o">.</span><span class="n">server</span><span class="o">.</span><span class="n">CLUSTER</span><span class="o">.</span><span class="n">description</span><span class="o">=</span><span class="n">Production</span> <span class="n">UFTPD</span>
<span class="n">server</span> <span class="n">on</span> <span class="n">CLUSTER</span>

<span class="c1"># configuration for &#39;TEST&#39; server</span>
<span class="n">authservice</span><span class="o">.</span><span class="n">server</span><span class="o">.</span><span class="n">TEST</span><span class="o">.</span><span class="n">host</span><span class="o">=</span><span class="n">localhost</span>
<span class="n">authservice</span><span class="o">.</span><span class="n">server</span><span class="o">.</span><span class="n">TEST</span><span class="o">.</span><span class="n">port</span><span class="o">=</span><span class="mi">64433</span>
<span class="n">authservice</span><span class="o">.</span><span class="n">server</span><span class="o">.</span><span class="n">TEST</span><span class="o">.</span><span class="n">commandHost</span><span class="o">=</span><span class="n">localhost</span>
<span class="n">authservice</span><span class="o">.</span><span class="n">server</span><span class="o">.</span><span class="n">TEST</span><span class="o">.</span><span class="n">commandPort</span><span class="o">=</span><span class="mi">64434</span>
<span class="n">authservice</span><span class="o">.</span><span class="n">server</span><span class="o">.</span><span class="n">TEST</span><span class="o">.</span><span class="n">ssl</span><span class="o">=</span><span class="n">false</span>
<span class="n">authservice</span><span class="o">.</span><span class="n">server</span><span class="o">.</span><span class="n">TEST</span><span class="o">.</span><span class="n">description</span><span class="o">=</span><span class="n">Test</span> <span class="n">UFTPD</span> <span class="n">server</span>
</pre></div>
</div>
<p>To allow the Auth server access to the command port of UFTPD, you
need to add an entry to UFTPD’s ACL file. This is explained in the
UFTPD manual.</p>
</section>
<section id="round-robin-use-grouping-of-uftpd-servers">
<h3>Round-robin use / grouping of UFTPD servers</h3>
<p>You can configure multiple UFTPD servers to form a “logical”
UFTPD server.  The idea is that multiple UFTPD servers are used in a
round robin fashion to provide better performance.</p>
<p>Also, this mode of operation will provide fail-over if one of the
UFTPD servers is down for maintenance or upgrades (or because of some
error).</p>
<p>In this case the configuration for the logical server has multiple
blocks numbered “1”, “2”, …</p>
<p>Each block configures one physical server.</p>
<p>For example:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="c1"># configuration for multiple UFTPD instances</span>
<span class="c1"># providing the logical &#39;CLUSTER&#39; server</span>

<span class="n">authservice</span><span class="o">.</span><span class="n">servers</span><span class="o">=</span><span class="n">CLUSTER</span>

<span class="n">authservice</span><span class="o">.</span><span class="n">server</span><span class="o">.</span><span class="n">CLUSTER</span><span class="o">.</span><span class="n">description</span><span class="o">=</span><span class="n">Production</span> <span class="n">UFTPD</span> <span class="n">server</span> <span class="n">on</span> <span class="n">CLUSTER</span>

<span class="n">authservice</span><span class="o">.</span><span class="n">server</span><span class="o">.</span><span class="n">CLUSTER</span><span class="mf">.1</span><span class="o">.</span><span class="n">host</span><span class="o">=</span><span class="n">cluster1</span><span class="o">.</span><span class="n">your</span><span class="o">.</span><span class="n">org</span>
<span class="n">authservice</span><span class="o">.</span><span class="n">server</span><span class="o">.</span><span class="n">CLUSTER</span><span class="mf">.1</span><span class="o">.</span><span class="n">port</span><span class="o">=</span><span class="mi">64433</span>
<span class="n">authservice</span><span class="o">.</span><span class="n">server</span><span class="o">.</span><span class="n">CLUSTER</span><span class="mf">.1</span><span class="o">.</span><span class="n">commandHost</span><span class="o">=</span><span class="n">cluster</span><span class="o">-</span>       <span class="n">internal</span><span class="o">-</span><span class="mf">1.</span><span class="n">your</span><span class="o">.</span><span class="n">org</span>
<span class="n">authservice</span><span class="o">.</span><span class="n">server</span><span class="o">.</span><span class="n">CLUSTER</span><span class="mf">.1</span><span class="o">.</span><span class="n">commandPort</span><span class="o">=</span><span class="mi">64434</span>
<span class="n">authservice</span><span class="o">.</span><span class="n">server</span><span class="o">.</span><span class="n">CLUSTER</span><span class="mf">.1</span><span class="o">.</span><span class="n">ssl</span><span class="o">=</span><span class="n">true</span>


<span class="n">authservice</span><span class="o">.</span><span class="n">server</span><span class="o">.</span><span class="n">CLUSTER</span><span class="mf">.2</span><span class="o">.</span><span class="n">host</span><span class="o">=</span><span class="n">cluster2</span><span class="o">.</span><span class="n">your</span><span class="o">.</span><span class="n">org</span>
<span class="n">authservice</span><span class="o">.</span><span class="n">server</span><span class="o">.</span><span class="n">CLUSTER</span><span class="mf">.2</span><span class="o">.</span><span class="n">port</span><span class="o">=</span><span class="mi">64433</span>
<span class="n">authservice</span><span class="o">.</span><span class="n">server</span><span class="o">.</span><span class="n">CLUSTER</span><span class="mf">.2</span><span class="o">.</span><span class="n">commandHost</span><span class="o">=</span><span class="n">cluster</span><span class="o">-</span>       <span class="n">internal</span><span class="o">-</span><span class="mf">2.</span><span class="n">your</span><span class="o">.</span><span class="n">org</span>
<span class="n">authservice</span><span class="o">.</span><span class="n">server</span><span class="o">.</span><span class="n">CLUSTER</span><span class="mf">.2</span><span class="o">.</span><span class="n">commandPort</span><span class="o">=</span><span class="mi">64434</span>
<span class="n">authservice</span><span class="o">.</span><span class="n">server</span><span class="o">.</span><span class="n">CLUSTER</span><span class="mf">.2</span><span class="o">.</span><span class="n">ssl</span><span class="o">=</span><span class="n">true</span>
</pre></div>
</div>
</section>
<section id="user-authentication">
<h3>User authentication</h3>
<p>The Auth service is a RESTful UNICORE service, and as such all the
configuration details for a UNICORE/X server apply here as well.</p>
<p>We summarise the most important details, please refer to the UNICORE/X
manual if you want to learn about further options.</p>
<p>The enabled authentication options and their order are configured
in <cite>container.properties</cite>.</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">container</span><span class="o">.</span><span class="n">security</span><span class="o">.</span><span class="n">rest</span><span class="o">.</span><span class="n">authentication</span><span class="o">.</span><span class="n">order</span><span class="o">=</span><span class="n">PASSWORD</span> <span class="o">|</span> <span class="n">SSHKEY</span> <span class="o">|</span> <span class="n">UNITY</span>
</pre></div>
</div>
<p>The available options can be combined.</p>
<section id="username-password-file">
<h4>Username-password file</h4>
<p>To use a file containing username, password and the DN,</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">container</span><span class="o">.</span><span class="n">security</span><span class="o">.</span><span class="n">rest</span><span class="o">.</span><span class="n">authentication</span><span class="o">.</span><span class="n">order</span><span class="o">=</span><span class="n">PASSWORD</span>
<span class="n">container</span><span class="o">.</span><span class="n">security</span><span class="o">.</span><span class="n">rest</span><span class="o">.</span><span class="n">authentication</span><span class="o">.</span><span class="n">PASSWORD</span><span class="o">.</span><span class="n">class</span><span class="o">=</span><span class="n">eu</span><span class="o">.</span><span class="n">unicore</span><span class="o">.</span><span class="n">services</span><span class="o">.</span><span class="n">rest</span><span class="o">.</span><span class="n">security</span><span class="o">.</span><span class="n">FilebasedAuthenticator</span>
<span class="n">container</span><span class="o">.</span><span class="n">security</span><span class="o">.</span><span class="n">rest</span><span class="o">.</span><span class="n">authentication</span><span class="o">.</span><span class="n">PASSWORD</span><span class="o">.</span><span class="n">file</span><span class="o">=</span><span class="n">conf</span><span class="o">/</span><span class="n">rest</span><span class="o">-</span><span class="n">users</span><span class="o">.</span><span class="n">txt</span>
</pre></div>
</div>
<p>This configures to use the file <cite>conf/rest-users.txt</cite>. The file format is</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="c1">#</span>
<span class="c1"># on each line:</span>
<span class="c1"># username:hash:salt:DN</span>
<span class="c1">#</span>
<span class="n">demouser</span><span class="p">:</span><span class="o">&lt;...&gt;</span><span class="p">:</span><span class="o">&lt;...&gt;</span><span class="p">:</span><span class="n">CN</span><span class="o">=</span><span class="n">Demo</span> <span class="n">User</span><span class="p">,</span> <span class="n">O</span><span class="o">=</span><span class="n">UNICORE</span><span class="p">,</span> <span class="n">C</span><span class="o">=</span><span class="n">EU</span>
</pre></div>
</div>
<p>i.e. each line gives the username, the hashed password, the salt and
the user’s DN, separated by colons. To generate entries, i.e. to hash the
password correctly, the ‘md5sum’ utility can be used. For example,
if your intended password is ‘test123’, you could do</p>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span>$&gt; <span class="nv">SALT</span><span class="o">=</span><span class="k">$(</span>tr -dc <span class="s2">&quot;A-Za-z0-9_&quot;</span> &lt; /dev/urandom <span class="p">|</span> head -c <span class="m">16</span> <span class="p">|</span> xargs<span class="k">)</span>
$&gt; /bin/echo <span class="s2">&quot;Salt is </span><span class="si">${</span><span class="nv">SALT</span><span class="si">}</span><span class="s2">&quot;</span>
$&gt; /bin/echo -n <span class="s2">&quot;</span><span class="si">${</span><span class="nv">SALT</span><span class="si">}</span><span class="s2">test123&quot;</span> <span class="p">|</span> md5sum
</pre></div>
</div>
<p>which will output the salted and hashed password. Here we generate a
random string as the salt. Enter these together with the username, and
the DN of the user into the password file.</p>
</section>
<section id="unity-saml-authentication">
<h4>Unity SAML authentication</h4>
<p>You can also hook up with Unity, passing on the username/password and
retrieving an authentication assertion.</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">container</span><span class="o">.</span><span class="n">security</span><span class="o">.</span><span class="n">rest</span><span class="o">.</span><span class="n">authentication</span><span class="o">.</span><span class="n">order</span><span class="o">=</span><span class="n">UNITY</span>

<span class="n">container</span><span class="o">.</span><span class="n">security</span><span class="o">.</span><span class="n">rest</span><span class="o">.</span><span class="n">authentication</span><span class="o">.</span><span class="n">UNITY</span><span class="o">.</span><span class="n">class</span><span class="o">=</span><span class="n">eu</span><span class="o">.</span><span class="n">unicore</span><span class="o">.</span><span class="n">services</span><span class="o">.</span><span class="n">rest</span><span class="o">.</span><span class="n">security</span><span class="o">.</span><span class="n">UnitySAMLAuthenticator</span>
<span class="n">container</span><span class="o">.</span><span class="n">security</span><span class="o">.</span><span class="n">rest</span><span class="o">.</span><span class="n">authentication</span><span class="o">.</span><span class="n">UNITY</span><span class="o">.</span><span class="n">address</span><span class="o">=</span><span class="n">https</span><span class="p">:</span><span class="o">//</span><span class="n">localhost</span><span class="p">:</span><span class="mi">2443</span><span class="o">/</span><span class="n">unicore</span><span class="o">-</span><span class="n">soapidp</span><span class="o">/</span><span class="n">saml2unicoreidp</span><span class="o">-</span><span class="n">soap</span><span class="o">/</span><span class="n">AuthenticationService</span>
<span class="n">container</span><span class="o">.</span><span class="n">security</span><span class="o">.</span><span class="n">rest</span><span class="o">.</span><span class="n">authentication</span><span class="o">.</span><span class="n">UNITY</span><span class="o">.</span><span class="n">validate</span><span class="o">=</span><span class="n">true</span>
</pre></div>
</div>
</section>
<section id="unity-oauth-bearer-token-authentication">
<h4>Unity OAuth bearer token authentication</h4>
<p>To have Unity check the client’s OAuth token:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">container</span><span class="o">.</span><span class="n">security</span><span class="o">.</span><span class="n">rest</span><span class="o">.</span><span class="n">authentication</span><span class="o">.</span><span class="n">order</span><span class="o">=</span><span class="n">UNITY</span><span class="o">-</span><span class="n">OAUTH</span>
<span class="n">container</span><span class="o">.</span><span class="n">security</span><span class="o">.</span><span class="n">rest</span><span class="o">.</span><span class="n">authentication</span><span class="o">.</span><span class="n">UNITY</span><span class="o">-</span><span class="n">OAUTH</span><span class="o">.</span><span class="n">class</span><span class="o">=</span><span class="n">eu</span><span class="o">.</span><span class="n">unicore</span><span class="o">.</span><span class="n">services</span><span class="o">.</span><span class="n">rest</span><span class="o">.</span><span class="n">security</span><span class="o">.</span><span class="n">UnityOAuthAuthenticator</span>
<span class="n">container</span><span class="o">.</span><span class="n">security</span><span class="o">.</span><span class="n">rest</span><span class="o">.</span><span class="n">authentication</span><span class="o">.</span><span class="n">UNITY</span><span class="o">-</span><span class="n">OAUTH</span><span class="o">.</span><span class="n">address</span><span class="o">=</span><span class="n">https</span><span class="p">:</span><span class="o">//</span><span class="n">localhost</span><span class="p">:</span><span class="mi">2443</span><span class="o">/</span><span class="n">unicore</span><span class="o">-</span><span class="n">soapidp</span><span class="o">.</span><span class="n">oidc</span><span class="o">/</span><span class="n">saml2unicoreidp</span><span class="o">-</span><span class="n">soap</span><span class="o">/</span><span class="n">AuthenticationService</span>
<span class="n">container</span><span class="o">.</span><span class="n">security</span><span class="o">.</span><span class="n">rest</span><span class="o">.</span><span class="n">authentication</span><span class="o">.</span><span class="n">UNITY</span><span class="o">-</span><span class="n">OAUTH</span><span class="o">.</span><span class="n">validate</span><span class="o">=</span><span class="n">true</span>
</pre></div>
</div>
</section>
<section id="ssh-key-validation">
<h4>SSH Key validation</h4>
<p>This authentication option is based on the validation of a token using
the user’s public SSH key. The token will be checked, and if
successful, the user will be assigned a distinguished name for later
authorisation.</p>
<p>SSH keys are read from the user’s <cite>~/.ssh/authorized_keys</cite> file, but
can also be managed manually in a dedicated ssh keys file.</p>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>SSH key validation will not work for users on Windows, since the UFTP
stand-alone client does not yet support SSH keys on Windows.
We recommand adding a username/password option for Windows users.</p>
</div>
<p>SSH key validation is configured as follows:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="c1"># authN</span>
<span class="n">container</span><span class="o">.</span><span class="n">security</span><span class="o">.</span><span class="n">rest</span><span class="o">.</span><span class="n">authentication</span><span class="o">.</span><span class="n">order</span><span class="o">=</span><span class="n">SSHKEY</span>

<span class="n">container</span><span class="o">.</span><span class="n">security</span><span class="o">.</span><span class="n">rest</span><span class="o">.</span><span class="n">authentication</span><span class="o">.</span><span class="n">SSHKEY</span><span class="o">.</span><span class="n">class</span><span class="o">=</span><span class="n">eu</span><span class="o">.</span><span class="n">unicore</span><span class="o">.</span><span class="n">uftp</span><span class="o">.</span><span class="n">authserver</span><span class="o">.</span><span class="n">authenticate</span><span class="o">.</span><span class="n">SSHKeyAuthenticator</span>
</pre></div>
</div>
<p>When used like this, the users get an automatically assigned DN. By
default, the DN is <cite>CN=&lt;username&gt;, OU=ssh-local-users</cite>. Using the “PAM
attribute source” (see below), authenticated users can be assigned the
“user” role automatically without further configuration.</p>
<p>The user DN can be modified by configuring the DN template like this:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="c1">#DN template used for SSH key mapping. The %s is replaced by the username</span>
<span class="n">container</span><span class="o">.</span><span class="n">security</span><span class="o">.</span><span class="n">rest</span><span class="o">.</span><span class="n">authentication</span><span class="o">.</span><span class="n">SSHKEY</span><span class="o">.</span><span class="n">dnTemplate</span><span class="o">=</span><span class="n">CN</span><span class="o">=%</span><span class="n">s</span><span class="p">,</span> <span class="n">OU</span><span class="o">=</span><span class="n">ssh</span><span class="o">-</span><span class="n">local</span><span class="o">-</span><span class="n">users</span>
</pre></div>
</div>
<section id="manual-ssh-key-mapping">
<h5>Manual SSH key mapping</h5>
<p>If you want to map ssh keys to DNs manually, a file is used. Entries in the file
override the keys read from <cite>~/.ssh/authorized_keys</cite>.</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="c1"># configure SSH keys file</span>
<span class="n">container</span><span class="o">.</span><span class="n">security</span><span class="o">.</span><span class="n">rest</span><span class="o">.</span><span class="n">authentication</span><span class="o">.</span><span class="n">SSHKEY</span><span class="o">.</span><span class="n">file</span><span class="o">=</span><span class="n">conf</span><span class="o">/</span><span class="n">ssh</span><span class="o">-</span><span class="n">users</span><span class="o">.</span><span class="n">txt</span>
</pre></div>
</div>
<p>It contains the mappings and the ssh public keys in a simple format:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="c1"># Example SSH users file used with the SSHKEY authentication method</span>

<span class="c1">#</span>
<span class="c1">#format: username:sshkey:DN</span>
<span class="c1">#</span>
<span class="n">demouser</span><span class="p">:</span><span class="n">ssh</span><span class="o">-</span><span class="n">rsa</span> <span class="n">keydata_was_omitted</span> <span class="n">testkey</span><span class="p">:</span><span class="n">CN</span><span class="o">=</span><span class="n">Demo</span> <span class="n">User</span><span class="p">,</span> <span class="n">O</span><span class="o">=</span><span class="n">UNICORE</span><span class="p">,</span> <span class="n">C</span><span class="o">=</span><span class="n">EU</span>
</pre></div>
</div>
<p>The SSH key is in the same one-line format used in the <cite>.ssh/authorized_keys</cite> file.</p>
<p>You can enter multiple lines per username, to accommodate the case that a user has different
SSH keys available. For example</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="c1"># Example SSH users file with multiple keys per user</span>

<span class="n">demouser</span><span class="p">:</span><span class="n">ssh</span><span class="o">-</span><span class="n">rsa</span> <span class="o">&lt;...</span><span class="n">omitted</span> <span class="n">keydata</span><span class="o">...&gt;</span><span class="p">:</span><span class="n">CN</span><span class="o">=</span><span class="n">Demo</span> <span class="n">User</span><span class="p">,</span> <span class="n">O</span><span class="o">=</span><span class="n">UNICORE</span><span class="p">,</span> <span class="n">C</span><span class="o">=</span><span class="n">EU</span>
<span class="n">demouser</span><span class="p">:</span><span class="n">ssh</span><span class="o">-</span><span class="n">dss</span> <span class="o">&lt;...</span><span class="n">omitted</span> <span class="n">keydata</span><span class="o">...&gt;</span><span class="p">:</span><span class="n">CN</span><span class="o">=</span><span class="n">Demo</span> <span class="n">User</span><span class="p">,</span> <span class="n">O</span><span class="o">=</span><span class="n">UNICORE</span><span class="p">,</span> <span class="n">C</span><span class="o">=</span><span class="n">EU</span>
<span class="n">otheruser</span><span class="p">:</span><span class="n">ssh</span><span class="o">-</span><span class="n">rsa</span> <span class="o">&lt;...</span><span class="n">omitted</span> <span class="n">keydata</span><span class="o">...&gt;</span><span class="p">:</span><span class="n">CN</span><span class="o">=</span><span class="n">Other</span> <span class="n">User</span><span class="p">,</span> <span class="n">O</span><span class="o">=</span><span class="n">UNICORE</span><span class="p">,</span> <span class="n">C</span><span class="o">=</span><span class="n">DE</span>
</pre></div>
</div>
</section>
</section>
</section>
<section id="attribute-sources">
<h3>Attribute sources</h3>
<p>Please refer to the UNICORE/X manual on how to set up and configure
attribute sources like map file or XUUDB.</p>
<p>To use the automatic SSH key mapping, please use this config snippet</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="c1"># attribute source(s)</span>
<span class="n">container</span><span class="o">.</span><span class="n">security</span><span class="o">.</span><span class="n">attributes</span><span class="o">.</span><span class="n">order</span><span class="o">=</span><span class="n">PAM</span>
<span class="n">container</span><span class="o">.</span><span class="n">security</span><span class="o">.</span><span class="n">attributes</span><span class="o">.</span><span class="n">combiningPolicy</span><span class="o">=</span><span class="n">MERGE_LAST_OVERRIDES</span>

<span class="n">container</span><span class="o">.</span><span class="n">security</span><span class="o">.</span><span class="n">attributes</span><span class="o">.</span><span class="n">PAM</span><span class="o">.</span><span class="n">class</span><span class="o">=</span><span class="n">eu</span><span class="o">.</span><span class="n">unicore</span><span class="o">.</span><span class="n">services</span><span class="o">.</span><span class="n">rest</span><span class="o">.</span><span class="n">security</span><span class="o">.</span><span class="n">PAMAttributeSource</span>
</pre></div>
</div>
<p>In this way users that successfully authenticate with their SSH key get the “user”
role automatically.</p>
</section>
<section id="attribute-mapping">
<h3>Attribute mapping</h3>
<p>After successful authentication, the user is assigned attributes
such as the Unix account and group which is used for file access.</p>
<p>The Unix account and group are taken from the configured attribute
sources (e.g. XUUDB). Since it is possible to access multiple UFTPD
servers using a single Auth server, it may be required to configure
different attributes for different UFTPD servers. This is easily
possible using the file attribute source (map file).</p>
<p>It is also possible to control which directories and files a user
can access. This is done by configuring the allowed and/or the
forbidden file path patterns.</p>
<p>The following map file entry gives a full example.</p>
<div class="highlight-xml notranslate"><div class="highlight"><pre><span></span><span class="nt">&lt;entry</span> <span class="na">key=</span><span class="s">&quot;CN=Demo User,O=UNICORE,C=EU&quot;</span><span class="nt">&gt;</span>
   <span class="nt">&lt;attribute</span> <span class="na">name=</span><span class="s">&quot;role&quot;</span><span class="nt">&gt;</span>
      <span class="nt">&lt;value&gt;</span>user<span class="nt">&lt;/value&gt;</span>
   <span class="nt">&lt;/attribute&gt;</span>

   <span class="cm">&lt;!-- default Unix account and group --&gt;</span>
   <span class="nt">&lt;attribute</span> <span class="na">name=</span><span class="s">&quot;xlogin&quot;</span><span class="nt">&gt;</span>
      <span class="nt">&lt;value&gt;</span>somebody<span class="nt">&lt;/value&gt;</span>
   <span class="nt">&lt;/attribute&gt;</span>
   <span class="nt">&lt;attribute</span> <span class="na">name=</span><span class="s">&quot;group&quot;</span><span class="nt">&gt;</span>
      <span class="nt">&lt;value&gt;</span>users<span class="nt">&lt;/value&gt;</span>
   <span class="nt">&lt;/attribute&gt;</span>

    <span class="cm">&lt;!-- UFTP specific attributes --&gt;</span>

    <span class="nt">&lt;attribute</span> <span class="na">name=</span><span class="s">&quot;uftpd.CLUSTER.xlogin&quot;</span><span class="nt">&gt;</span>
       <span class="nt">&lt;value&gt;</span>user1<span class="nt">&lt;/value&gt;</span>
    <span class="nt">&lt;/attribute&gt;</span>
    <span class="nt">&lt;attribute</span> <span class="na">name=</span><span class="s">&quot;uftpd.CLUSTER.group&quot;</span><span class="nt">&gt;</span>
       <span class="nt">&lt;value&gt;</span>hpc<span class="nt">&lt;/value&gt;</span>
    <span class="nt">&lt;/attribute&gt;</span>

    <span class="cm">&lt;!-- optional rate limit (bytes per second) --&gt;</span>
    <span class="nt">&lt;attribute</span> <span class="na">name=</span><span class="s">&quot;uftpd.CLUSTER.rateLimit&quot;</span><span class="nt">&gt;</span>
       <span class="nt">&lt;value&gt;</span>10M<span class="nt">&lt;/value&gt;</span>
    <span class="nt">&lt;/attribute&gt;</span>

    <span class="cm">&lt;!-- optional includes --&gt;</span>
    <span class="nt">&lt;attribute</span> <span class="na">name=</span><span class="s">&quot;uftpd.CLUSTER.includes&quot;</span><span class="nt">&gt;</span>
       <span class="nt">&lt;value&gt;</span>/tmp/*:/work/*<span class="nt">&lt;/value&gt;</span>
    <span class="nt">&lt;/attribute&gt;</span>
    <span class="cm">&lt;!-- optional excludes --&gt;</span>
    <span class="nt">&lt;attribute</span> <span class="na">name=</span><span class="s">&quot;uftpd.CLUSTER.excludes&quot;</span><span class="nt">&gt;</span>
       <span class="nt">&lt;value&gt;</span>/home/*:/etc/*<span class="nt">&lt;/value&gt;</span>
    <span class="nt">&lt;/attribute&gt;</span>

 <span class="nt">&lt;/entry&gt;</span>
</pre></div>
</div>
<p>Here, the “CLUSTER” must match a configured UFTPD server, see also <a class="reference internal" href="#uftpd-server-s-configuration">UFTPD server(s) configuration</a>. Available attributes are</p>
<blockquote>
<div><ul class="simple">
<li><p>role: the UNICORE role, usually this will be ‘user’</p></li>
<li><p>xlogin, group: Unix account and group to be used for this user</p></li>
<li><p>rateLimit: the number of bytes per second (per transfer) can be
limited. You can use the units “K”, “M”, and “G” for kilo, mega or
gigabytes, respectively.</p></li>
<li><p>includes: file path patterns (separated by “:”) that are allowed.
If not given, all the user’s files can be accessed.</p></li>
<li><p>excludes: file path patterns (separated by “:”) that are forbidden.
If not given, no files are explicitely excluded.</p></li>
</ul>
</div></blockquote>
</section>
</section>
<section id="checking-the-installation">
<h2>Checking the installation</h2>
<p>You can check that the server works using a simple HTTP client such
as <cite>curl</cite> to access the Auth server’s base URL, provided you
have configured username/password authentication.</p>
<p>The command</p>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span>$&gt; curl -k https://&lt;host:port&gt;/rest/auth <span class="se">\</span>
        -H <span class="s2">&quot;Accept: application/json&quot;</span> <span class="se">\</span>
        -u username:password
</pre></div>
</div>
<p>should produce a JSON document containing information about the
configured UFTPD servers and their status, such as</p>
<div class="highlight-json notranslate"><div class="highlight"><pre><span></span><span class="p">{</span><span class="nt">&quot;TEST&quot;</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w"></span>
<span class="w">  </span><span class="nt">&quot;availableGroups&quot;</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w"></span>
<span class="w">    </span><span class="s2">&quot;somebody&quot;</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="s2">&quot;audio&quot;</span><span class="p">,</span><span class="w"></span>
<span class="w">    </span><span class="s2">&quot;users&quot;</span><span class="w"></span>
<span class="w">  </span><span class="p">],</span><span class="w"></span>
<span class="w">  </span><span class="nt">&quot;description&quot;</span><span class="p">:</span><span class="w"> </span><span class="s2">&quot;Default UFTPD server for testing&quot;</span><span class="p">,</span><span class="w"></span>
<span class="w">  </span><span class="nt">&quot;gid&quot;</span><span class="p">:</span><span class="w"> </span><span class="s2">&quot;users&quot;</span><span class="p">,</span><span class="w"></span>
<span class="w">  </span><span class="nt">&quot;href&quot;</span><span class="p">:</span><span class="w"> </span><span class="s2">&quot;https://localhost:9000/rest/auth/TEST&quot;</span><span class="p">,</span><span class="w"></span>
<span class="w">  </span><span class="nt">&quot;rateLimit&quot;</span><span class="p">:</span><span class="w"> </span><span class="mi">209715200</span><span class="p">,</span><span class="w"></span>
<span class="w">  </span><span class="nt">&quot;status&quot;</span><span class="p">:</span><span class="w"> </span><span class="s2">&quot;OK [connected to UFTPD localhost:64435]&quot;</span><span class="p">,</span><span class="w"></span>
<span class="w">  </span><span class="nt">&quot;uid&quot;</span><span class="p">:</span><span class="w"> </span><span class="s2">&quot;somebody&quot;</span><span class="p">,</span><span class="w"></span>
<span class="p">}}</span><span class="w"></span>
</pre></div>
</div>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>If you do not get any output, try adding the “-i” option to the curl
command, most probably the username/password is incorrect.</p>
</div>
</section>
<section id="installing-the-auth-server-in-an-existing-unicore-x-server">
<h2>Installing the Auth server in an existing UNICORE/X server</h2>
<p>This option is interesting if you are already running a UNICORE
installation and want to allow your users the option of using the
standalone UFTP client. This requires UNICORE/X version 8.0 or later!</p>
<blockquote>
<div><ul class="simple">
<li><p>copy the <cite>authserver-*.jar</cite> file to the ‘lib’ directory of UNICORE/X</p></li>
<li><p>copy the XACML policy file <cite>30uftpAuthService.xml</cite> to the
‘conf/xacml2Policies’ directory</p></li>
<li><p>edit <cite>container.properties</cite> (or <cite>uas.config</cite>) and setup UFTPD details
and, if necessary, RESTful user authentication as described above</p></li>
</ul>
</div></blockquote>
</section>
<section id="running-the-auth-server-behind-a-unicore-gateway">
<h2>Running the Auth server behind a UNICORE Gateway</h2>
<p>If you want to place the Auth server behind a UNICORE gateway for easy
firewall transversal, you need to configure an entry in the Gateway
connections config file, and set the container base URL property
(‘’container.baseurl’’) in the Auth server’s <cite>container.properties</cite>. This
option is also useful when the server’s listen address differs from
the publicly accessible server address, such as when running the Auth
server behind a NAT firewall.</p>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>